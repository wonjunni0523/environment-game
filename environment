import pygame
import time

pygame.init()
#graphic color
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
ORANGE = (255, 165, 0)
YELLOW = (255, 255, 0)
DARK_BLUE = (0, 0, 125)
PURPLE = (170, 0, 210)
LIGHT_BLUE = (0, 255, 255)
BROWN = (150, 75, 0)

#Define Pi for circular geometry
PI=3.14159265359

#Coordinate manipulation
#Moving objects:Sun,moon,red bird

#Sun
x_coord_sun = 0
y_coord_sun= 70
x_coord_sun_change = 1
y_coord_sun_change = -0.2
sun=True

#Moon
x_coord_moon = 0
y_coord_moon = 70
x_coord_moon_change = 1
y_coord_moon_change = -0.2
moon=False

#RED Bird
bird_head_day = 500
bird_body_day = 550
bird_top_day = 470

bird_head_night = 50
bird_body_night = 0
bird_top_night = 25



#Screen
size = (600, 500)
screen = pygame.display.set_mode(size)

#Function
done = False
clock = pygame.time.Clock()

#Pygame run
while not done:

    for event in pygame.event.get():  # User did something
        if event.type == pygame.QUIT:  # If user clicked close
            done = True  # Flag that we are done so we exit this loop

  #Background
    #Rainbow graphic
    pygame.draw.circle(screen, RED, (300, 250), 180, 15, True, True, False, False)
    pygame.draw.circle(screen, ORANGE, (300, 250), 165, 15, True, True, False, False)
    pygame.draw.circle(screen, YELLOW, (300, 250), 150, 15, True, True, False, False)
    pygame.draw.circle(screen, GREEN, (300, 250), 135, 15, True, True, False, False)
    pygame.draw.circle(screen, BLUE, (300, 250), 120, 15, True, True, False, False)
    pygame.draw.circle(screen, DARK_BLUE, (300, 250), 105, 15, True, True, False, False)
    pygame.draw.circle(screen, PURPLE, (300, 250), 90, 15, True, True, False, False)




    #Building graphic
    #(White church)
    pygame.draw.rect(screen, WHITE, (5,165,100,170))
    for i in range(2):
        for j in range(3):
            if not(i==0 and j==1) and sun==True:
                pygame.draw.line(screen, BLACK,[30+30*j,240-30*i],[20+30*j,220-30*i],10)
            if not(i==0 and j==1) and moon==True:
                pygame.draw.line(screen, YELLOW, [30 + 30 * j, 240 - 30 * i], [20 + 30 * j, 220 - 30 * i], 10)
    pygame.draw.rect(screen, YELLOW,(45,220,20,120))
    pygame.draw.rect(screen, WHITE,(50,95,10,70))
    pygame.draw.rect(screen, WHITE,(20,135,70,10))
    #(Red church)
    pygame.draw.rect(screen, RED, (485, 165, 100, 170))
    for i in range(2):
        for j in range(3):
            if not(i==0 and j==1) and sun==True:
                pygame.draw.line(screen, BLACK,[510+30*j,240-30*i],[500+30*j,220-30*i],10)
            if not (i == 0 and j == 1) and moon == True:
                pygame.draw.line(screen, YELLOW, [510 + 30 * j, 240 - 30 * i], [500 + 30 * j, 220 - 30 * i], 10)
    pygame.draw.rect(screen, YELLOW,(525,220,20,120))
    pygame.draw.rect(screen, RED, (530, 95, 10, 70))
    pygame.draw.rect(screen, RED, (500, 135, 70, 10))


    #graveyard graphic
    pygame.draw.rect(screen, BROWN, (0, 250, 600, 500))
    #grass grave
    for i in range(3):
        for j in range(4):
            pygame.draw.circle(screen, GREEN, (75+(150*j), 450-(75*i)), 50, 50, True, True, False, False)
    #thombstone
    for i in range(2):
        for j in range(4):
            pygame.draw.circle(screen,BLACK, (75+(150*j),300+(75*i)),10,150,True,True,False,False)

    #RED Bird



    if sun==True:

        pygame.draw.circle(screen, RED, (bird_head_day, 40), 20, 150, True, True, True, True)
        pygame.draw.circle(screen, RED, (bird_body_day,50),40,150,False,False,True,True)
        pygame.draw.circle(screen, RED, (bird_top_day,50),50,30,True,False,False,False)

        bird_head_day = bird_head_day-1
        bird_body_day = bird_body_day-1
        bird_top_day = bird_top_day-1

        bird_head_night = 50
        bird_body_night = 0
        bird_top_night = 25



    if moon==True:

        pygame.draw.circle(screen, RED, (bird_head_night, 40), 20, 150, True, True, True, True)
        pygame.draw.circle(screen, RED, (bird_body_night, 50), 40, 150, False, False, True, True)
        pygame.draw.circle(screen, RED, (bird_top_night, 50), 50, 30, True, False, False, False)

        bird_head_night = bird_head_night + 1
        bird_body_night = bird_body_night + 1
        bird_top_night = bird_top_night + 1

        bird_head_day = 500
        bird_body_day = 550
        bird_top_day = 470


    # Text background
    pygame.draw.rect(screen, YELLOW,(0,440,600,500))
    pygame.draw.rect(screen, BLUE, (140, 440, 300, 500))
    for i in range(10):
         pygame.draw.line(screen, BLUE, (0, 460+(2 * i)), (140, 460 + (2 * i)))
         pygame.draw.line(screen, BLUE, (440, 460+(2 * i)),(600, 460 + (2 * i)))

    # Sunshine graphic
    if sun==True:
        if x_coord_sun>590:
            sun=False
            moon=True
            x_coord_sun = 0
            y_coord_sun = 70
            y_coord_sun_change = y_coord_sun_change * -1
        pygame.draw.circle(screen, YELLOW, (x_coord_sun, y_coord_sun), 25)
        x_coord_sun = x_coord_sun + x_coord_sun_change
        y_coord_sun = y_coord_sun + y_coord_sun_change
        if y_coord_sun < 10:
            y_coord_sun_change = y_coord_sun_change * -1
    #Moon graphic
    if moon==True:
        if x_coord_moon>590:
            moon=False
            sun=True
            x_coord_moon = 0
            y_coord_moon = 70
            y_coord_moon_change = y_coord_moon_change * -1

        pygame.draw.circle(screen, ORANGE, (x_coord_moon, y_coord_moon), 25)
        x_coord_moon = x_coord_moon+ x_coord_moon_change
        y_coord_moon = y_coord_moon+ y_coord_moon_change
        if y_coord_moon < 10:
            y_coord_moon_change = y_coord_moon_change * -1



    # Text
    # Select the font to use, size, bold, italics
    font = pygame.font.SysFont('Times New Roman', 30, True, False)
    # Render the text. "True" means anti-aliased text.
    # Black is the color. The variable BLACK was defined
    # above as a list of [0, 0, 0]
    # Note: This line creates an image of the letters,
    # but does not put it on the screen yet.
    text = font.render("Utopia of Wonjune", True, LIGHT_BLUE)

    # Put the image of the text on the screen at 250x250
    screen.blit(text, [165, 450])
    #Display "pygame.draw" in running screen

    pygame.display.flip()




    # Clear the screen and set the screen background
    #Daytime(sun rise)
    if sun==True:
        screen.fill(LIGHT_BLUE)
    #Nighttime(moon rise)
    if moon==True:
        screen.fill(DARK_BLUE)
